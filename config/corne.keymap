/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
  &kp Q  &kp W  &kp E  &kp R           &kp T    &kp Y  &kp U      &kp I      &kp O    &kp BACKSPACE
  &kp A  &kp S  &kp D  &kp F           &kp G    &kp H  &kp J      &kp K      &kp L    &kp P
  &kp Z  &kp X  &kp C  &kp V           &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp QUESTION
                &sl 4  &kp LEFT_SHIFT  &sl 1    &sl 2  &kp SPACE  &sl 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_ALT  &kp LEFT_BRACE     &kp RIGHT_BRACE    &kp PLUS      &kp LESS_THAN     &kp GREATER_THAN   &kp NON_US_BACKSLASH  &kp EQUAL
  &kp EXCLAMATION       &kp SEMICOLON          &kp SPACE     &kp DOUBLE_QUOTES  &kp COLON          &kp MINUS     &kp COMMA         &kp MINUS          &kp UNDERSCORE        &kp SLASH
  &kp AMPERSAND         &kp AT_SIGN            &kp HASH      &kp DOLLAR         &kp PERCENT        &kp ASTERISK  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOT               &kp N0
                                               &kp PERCENT   &sl 6              &trans             &kp ENTER     &kp PERIOD        &kp SQT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
  &trans  &trans  &trans  &trans  &trans       &kp TAB  &none    &none               &trans  &trans
  &none   &trans  &trans  &trans  &mkp LCLK    &none    &kp SQT  &none               &none   &kp LG(F)
  &trans  &trans  &trans  &trans  &trans       &none    &none    &kp LG(LEFT_SHIFT)  &trans  &none
                  &trans  &trans  &trans       &trans   &sl 5    &trans
            >;
        };

        layer_3 {
            bindings = <
  &kp LC(LS(TAB))  &kp LC(TAB)       &kp LC(LEFT)  &kp LC(RIGHT)    &trans               &trans  &kp F5    &kp UP_ARROW  &none      &kp BACKSPACE
  &kp LG(DOWN)     &kp LC(UP_ARROW)  &none         &kp C_VOLUME_UP  &kp C_VOLUME_DOWN    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp ENTER
  &trans           &trans            &none         &none            &none                &trans  &none     &none         &none      &kp LS(ENTER)
                                     &trans        &trans           &trans               &trans  &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
  &kp BACKSPACE  &kp LG(C)  &kp LG(V)  &kp LG(X)       &kp LEFT_ALT    &kp PLUS      &kp N7  &kp N8  &kp N9  &kp BSPC
  &kp LG(A)      &trans     &none      &kp LEFT_SHIFT  &kp LG(Z)       &kp MINUS     &kp N4  &kp N5  &kp N6  &kp ENTER
  &kp LCTRL      &none      &none      &none           &none           &kp ASTERISK  &kp N1  &kp N2  &kp N3  &kp N0
                            &trans     &trans          &trans          &kp Z         &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
  &none   &none   &none   &none   &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans        &trans  &trans  &trans  &trans  &bt BT_CLR
  &trans        &trans        &trans        &trans  &sys_reset    &trans  &trans  &trans  &trans  &trans
  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans
                              &sl 7         &trans  &sl 8         &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
  &none   &none   &none   &none   &none     &trans  &trans  &trans  &trans  &trans
  &none   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
  &kp BACKSPACE  &kp LG(C)  &kp LG(V)  &kp LG(X)       &kp LG(Z)    &trans  &trans  &trans  &trans  &trans
  &kp LG(A)      &trans     &trans     &kp LEFT_SHIFT  &trans       &trans  &trans  &trans  &trans  &trans
  &trans         &trans     &trans     &trans          &trans       &trans  &trans  &trans  &trans  &trans
                            &trans     &trans          &trans       &trans  &trans  &trans
            >;
        };
    };
};
